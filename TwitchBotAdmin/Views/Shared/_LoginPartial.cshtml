@using Microsoft.AspNet.Identity
@using Microsoft.Owin.Security
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
    }
}
else
{
    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Context.Request.RawUrl, Provider="Twitch" }, FormMethod.Post, new { id = "loginForm", @class = "navbar-right" }))
    {        
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        @foreach (AuthenticationDescription p in Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes())
        {
        <li>
            <a href="javascript:document.getElementById('loginForm').submit()" title="Log in using your @p.Caption account">
                Login using @p.AuthenticationType
            </a>
        </li>
        }
    </ul>
    }
}
